# 描述信息
info.blog-url = https://blog.csdn.net/zfy163520
info.author = vincent
# 如果 Maven 插件没配置此处请注释掉
info.version=@project.version@
#info.name=@project.artifactId@

# 选择激活对应环境的配置，如果是dev则代表不用认证就能访问监控页，prod代表需要认证
#spring.profiles.active=prod

# 日志文件
#logging.file=./target/admin-server.log

# 加载所有的端点/默认只加载了 info / health
management.endpoints.web.exposure.include=*

# 比较重要,默认 /actuator spring-boot-admin 扫描不到
#management.endpoints.web.bash-path = /
management.endpoint.health.show-details=always

# 可以关闭制定的端点
management.endpoint.shutdown.enabled=false

# 路径映射，将 health 路径映射成 rest_health 那么在访问 health 路径将为404，因为原路径已经变成 rest_health 了，一般情况下不建议使用
# management.endpoints.web.path-mapping.health=rest_health

#spring.boot.admin.client.url=http://localhost:8080
## 不配置老喜欢用主机名，看着不舒服....
#spring.boot.admin.client.instance.prefer-ip=true


# 登陆所需的账号密码
#spring.security.user.name=vincent
#spring.security.user.password=vincent
## 便于客户端可以在受保护的服务器上注册api
#spring.boot.admin.client.username=vincent
#spring.boot.admin.client.password=vincent
## 便服务器可以访问受保护的客户端端点
#spring.boot.admin.client.instance.metadata.user.name=vincent
#spring.boot.admin.client.instance.metadata.user.password=vincent
